{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport { createStore } from \"vuex\";\nconst store = createStore({\n  state: {\n    user: null,\n    sessions: [],\n    // {user, messages, unread}\n    current_session: null\n  },\n  mutations: {\n    SET_USER(state, user) {\n      state.user = user;\n    },\n    ADD_SESSION(state, user) {\n      state.sessions.push({\n        \"user\": user,\n        \"messages\": [],\n        // {content, date, self}\n        \"unread\": 0\n      });\n    },\n    DELETE_SESSION(state, user) {\n      for (let index = 0; index < state.sessions.length; index++) {\n        let session = state.sessions[index];\n        if (session.user.sid == user.sid) {\n          state.sessions.splice(index, 1);\n          if (state.current_session.user.sid == session.user.sid) {\n            state.current_session = null;\n          }\n          break;\n        }\n      }\n    },\n    SET_SESSIONS(state, users) {\n      const sessions = [];\n      for (let user of users) {\n        sessions.push({\n          \"user\": user,\n          \"messages\": [],\n          \"unread\": 0\n        });\n      }\n      state.sessions = sessions;\n    },\n    SET_CURRENT_SESSION(state, session) {\n      // the chat session clicked\n      session.unread = 0; // clear the unread icon\n      state.current_session = session;\n    },\n    SEND_MESSAGE(state, content) {\n      if (!state.current_session) {\n        // if refreshed, the original info will be cleared\n        return;\n      }\n      state.current_session.messages.push({\n        content: content,\n        date: new Date(),\n        self: true\n      });\n    },\n    RECEIVE_MESSAGE(state, data) {\n      const sid = data['sid'];\n      const content = data['content'];\n      let chat_session = null;\n      for (let session of state.sessions) {\n        if (session.user.sid == sid) {\n          chat_session = session;\n          break;\n        }\n      }\n      if (chat_session) {\n        chat_session.messages.push({\n          content: content,\n          date: new Date(),\n          self: false\n        });\n        if (!state.current_session || state.current_session.user.sid != chat_session.user.sid) {\n          chat_session.unread += 1;\n        }\n      }\n    }\n  },\n  getters: {\n    logined(state) {\n      return state.user ? true : false;\n    }\n  }\n});\nexport default store;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}