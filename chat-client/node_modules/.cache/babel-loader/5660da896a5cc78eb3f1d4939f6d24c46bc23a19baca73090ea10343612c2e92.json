{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-227179ae\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"list\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"alt\", \"src\"];\nconst _hoisted_4 = {\n  class: \"name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_badge = _resolveComponent(\"el-badge\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sessions, session => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      onClick: $event => $options.onSelectSession(session),\n      class: _normalizeClass({\n        'active': $options.current_session && session.user.sid == $options.current_session.user.sid\n      }),\n      key: session.user.sid\n    }, [_createElementVNode(\"img\", {\n      class: \"avatar\",\n      width: \"30\",\n      height: \"30\",\n      alt: session.user.username,\n      src: _ctx.$socket.server_host + session.user.avatar\n    }, null, 8 /* PROPS */, _hoisted_3), _createVNode(_component_el_badge, {\n      value: session.unread,\n      class: \"item\",\n      hidden: session.unread == 0\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"p\", _hoisted_4, _toDisplayString(session.user.username) + \"(\" + _toDisplayString(session.user.ip) + \")\", 1 /* TEXT */)]),\n\n      _: 2 /* DYNAMIC */\n    }, 1032 /* PROPS, DYNAMIC_SLOTS */, [\"value\", \"hidden\"])], 10 /* CLASS, PROPS */, _hoisted_2);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_Fragment","_renderList","$options","sessions","session","onClick","$event","onSelectSession","_normalizeClass","current_session","user","sid","key","width","height","alt","username","src","_ctx","$socket","server_host","avatar","_createVNode","_component_el_badge","value","unread","hidden","_hoisted_4","_toDisplayString","ip"],"sources":["/Users/byc324/PycharmProjects/chat-client/src/components/list.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  name: \"list_com\",\r\n  computed: {\r\n    sessions() {\r\n      return this.$store.state.sessions\r\n    },\r\n    current_session(){\r\n      return this.$store.state.current_session\r\n    }\r\n  },\r\n  mounted() {\r\n    this.$socket.onFriendOnline((result) => {\r\n      // console.log(result);\r\n      let user = result.user;\r\n      // this.$chat.addSession(user);\r\n      this.$store.commit('ADD_SESSION', user)\r\n    })\r\n    \r\n    this.$socket.onFriendOffline((result) => {\r\n      // console.log(result);\r\n      let user = result.user;\r\n      this.$store.commit('DELETE_SESSION', user)\r\n    })\r\n  },\r\n  methods: {\r\n    onSelectSession(session) {\r\n      this.$store.commit(\"SET_CURRENT_SESSION\", session);\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"list\">\r\n    <ul>\r\n      <li \r\n        v-for=\"session in sessions\" \r\n        @click=\"onSelectSession(session)\" \r\n        :class=\"{'active': (current_session && session.user.sid == current_session.user.sid)}\"\r\n        :key=\"session.user.sid\"\r\n      >\r\n        <img class=\"avatar\" width=\"30\" height=\"30\" :alt=\"session.user.username\"\r\n          :src=\"$socket.server_host + session.user.avatar\">\r\n        <el-badge :value=\"session.unread\" class=\"item\" :hidden=\"session.unread == 0\">\r\n          <p class=\"name\">{{ session.user.username }}({{ session.user.ip }})</p>\r\n        </el-badge>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<style scoped lang=\"less\">\r\n.list {\r\n  li {\r\n    padding: 12px 15px;\r\n    border-bottom: 1px solid rgba(245, 206, 199, 0.5);\r\n    cursor: pointer;\r\n    transition: background-color 0.1s;\r\n\r\n    &:hover {\r\n      background-color: rgba(255, 255, 255, 0.03);\r\n    }\r\n\r\n    &.active {\r\n      background-color: rgba(255, 255, 255, 0.1);\r\n    }\r\n\r\n    .unread-count {\r\n      padding: 2px 5px;\r\n    }\r\n  }\r\n\r\n  .avatar,\r\n  .name {\r\n    vertical-align: middle;\r\n  }\r\n\r\n  .avatar {\r\n    border-radius: 2px;\r\n  }\r\n\r\n  .name {\r\n    display: inline-block;\r\n    margin: 0 0 0 15px;\r\n  }\r\n}\r\n</style>\r\n"],"mappings":";;;EAkCOA,KAAK,EAAC;AAAM;;;;EAWNA,KAAK,EAAC;AAAM;;;uBAXvBC,mBAAA,CAeM,OAfNC,UAeM,GAdJC,mBAAA,CAaK,c,kBAZHF,mBAAA,CAWKG,SAAA,QAAAC,WAAA,CAVeC,QAAA,CAAAC,QAAQ,EAAnBC,OAAO;yBADhBP,mBAAA,CAWK;MATFQ,OAAK,EAAAC,MAAA,IAAEJ,QAAA,CAAAK,eAAe,CAACH,OAAO;MAC9BR,KAAK,EAAAY,eAAA;QAAA,UAAcN,QAAA,CAAAO,eAAe,IAAIL,OAAO,CAACM,IAAI,CAACC,GAAG,IAAIT,QAAA,CAAAO,eAAe,CAACC,IAAI,CAACC;MAAG;MAClFC,GAAG,EAAER,OAAO,CAACM,IAAI,CAACC;QAEnBZ,mBAAA,CACmD;MAD9CH,KAAK,EAAC,QAAQ;MAACiB,KAAK,EAAC,IAAI;MAACC,MAAM,EAAC,IAAI;MAAEC,GAAG,EAAEX,OAAO,CAACM,IAAI,CAACM,QAAQ;MACnEC,GAAG,EAAEC,IAAA,CAAAC,OAAO,CAACC,WAAW,GAAGhB,OAAO,CAACM,IAAI,CAACW;yCAC3CC,YAAA,CAEWC,mBAAA;MAFAC,KAAK,EAAEpB,OAAO,CAACqB,MAAM;MAAE7B,KAAK,EAAC,MAAM;MAAE8B,MAAM,EAAEtB,OAAO,CAACqB,MAAM;;wBACpE,MAAsE,CAAtE1B,mBAAA,CAAsE,KAAtE4B,UAAsE,EAAAC,gBAAA,CAAnDxB,OAAO,CAACM,IAAI,CAACM,QAAQ,IAAG,GAAC,GAAAY,gBAAA,CAAGxB,OAAO,CAACM,IAAI,CAACmB,EAAE,IAAG,GAAC,gB"},"metadata":{},"sourceType":"module","externalDependencies":[]}