{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, createElementVNode as _createElementVNode, toDisplayString as _toDisplayString, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-5f55fd00\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"list\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = [\"alt\", \"src\"];\nconst _hoisted_4 = {\n  class: \"name\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_badge = _resolveComponent(\"el-badge\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"ul\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.sessions, session => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      onClick: $event => $options.onSelectSession(session),\n      class: _normalizeClass({\n        'active': $options.current_session && session.user.sid == $options.current_session.user.sid\n      }),\n      key: session.user.sid\n    }, [_createElementVNode(\"img\", {\n      class: \"avatar\",\n      width: \"30\",\n      height: \"30\",\n      alt: session.user.username,\n      src: _ctx.$socket.server_host + session.user.avatar\n    }, null, 8, _hoisted_3), _createVNode(_component_el_badge, {\n      value: session.unread,\n      class: \"item\",\n      hidden: session.unread == 0\n    }, {\n      default: _withCtx(() => [_createElementVNode(\"p\", _hoisted_4, _toDisplayString(session.user.username) + \"(\" + _toDisplayString(session.user.ip) + \")\", 1)]),\n      _: 2\n    }, 1032, [\"value\", \"hidden\"])], 10, _hoisted_2);\n  }), 128))])]);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}