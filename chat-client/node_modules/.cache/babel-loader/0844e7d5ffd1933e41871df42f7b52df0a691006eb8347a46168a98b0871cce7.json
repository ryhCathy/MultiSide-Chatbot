{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, createCommentVNode as _createCommentVNode, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-351dff66\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"message\",\n  ref: \"el\"\n};\nconst _hoisted_2 = {\n  key: 0\n};\nconst _hoisted_3 = {\n  class: \"time\"\n};\nconst _hoisted_4 = [\"src\"];\nconst _hoisted_5 = {\n  class: \"text\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [$options.current_session ? (_openBlock(), _createElementBlock(\"ul\", _hoisted_2, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.current_session.messages, (message, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      key: index\n    }, [_createElementVNode(\"p\", _hoisted_3, [_createElementVNode(\"span\", null, _toDisplayString($options.timeFormat(message.date)), 1)]), _createElementVNode(\"div\", {\n      class: _normalizeClass({\n        'main': true,\n        'self': message.self\n      })\n    }, [_createElementVNode(\"img\", {\n      class: \"avatar\",\n      width: \"30\",\n      height: \"30\",\n      src: _ctx.$socket.server_host + $options.user.avatar\n    }, null, 8, _hoisted_4), _createElementVNode(\"div\", _hoisted_5, _toDisplayString(message.content), 1)], 2)]);\n  }), 128))])) : _createCommentVNode(\"\", true)], 512);\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}