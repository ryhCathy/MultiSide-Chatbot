{"ast":null,"code":"import { io } from \"socket.io-client\";\nclass Socket {\n  constructor() {\n    if (process.env.NODE_ENV == \"production\") {\n      this.server_host = window.location.origin;\n    } else {\n      this.server_host = \"http://127.0.0.1:5000\";\n    }\n    this.socket = io(this.server_host);\n  }\n  connect() {\n    this.socket.connect();\n  }\n  emitLogin(username, callback) {\n    this.socket.emit(\"login\", {\n      \"username\": username\n    }, result => {\n      if (callback) {\n        callback(result);\n      }\n    });\n  }\n  onFriendOnline(callback) {\n    this.socket.on(\"friend online\", result => {\n      // \"friend online\": same as the server side\n      if (callback) {\n        callback(result);\n      }\n    });\n  }\n  onFriendOffline(callback) {\n    // socket.on: receive the event from the backend\n    this.socket.on(\"friend offline\", result => {\n      if (callback) {\n        callback(result);\n      }\n    });\n  }\n  emitSendMessage(data, callback) {\n    this.socket.emit(\"send message\", {\n      \"to\": data['to'],\n      \"message\": data['message']\n    }, result => {\n      if (callback) {\n        callback(result);\n      }\n    });\n  }\n  onReceiveMessage(callback) {\n    this.socket.on(\"receive message\", result => {\n      if (callback) {\n        callback(result);\n      }\n    });\n  }\n  get connected() {\n    return this.socket.connected;\n  }\n}\nexport default new Socket();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}