{"ast":null,"code":"export default {\n  name: \"messageComponent\",\n  computed: {\n    current_session() {\n      return this.$store.state.current_session;\n    },\n    user() {\n      return this.$store.state.user;\n    }\n  },\n  mounted() {\n    this.$socket.onReceiveMessage(result => {\n      const sid = result['from'];\n      const message = result['message'];\n      this.$store.commit(\"RECEIVE_MESSAGE\", {\n        \"sid\": sid,\n        \"content\": message\n      });\n    });\n  },\n  methods: {\n    timeFormat(date) {\n      if (typeof date === \"string\") {\n        date = new Date(date);\n      }\n      return date.getHours() + \":\" + date.getMinutes();\n    },\n    avatarFormat(avatar_path) {\n      return this.$socket.server_host + avatar_path;\n    }\n  },\n  updated() {\n    this.$nextTick(() => {\n      var container = this.$refs.el;\n      container.scrollTop = container.scrollHeight;\n    });\n  }\n};","map":{"version":3,"names":["name","computed","current_session","$store","state","user","mounted","$socket","onReceiveMessage","result","sid","message","commit","methods","timeFormat","date","Date","getHours","getMinutes","avatarFormat","avatar_path","server_host","updated","$nextTick","container","$refs","el","scrollTop","scrollHeight"],"sources":["/Users/byc324/PycharmProjects/chat-client/src/components/message.vue"],"sourcesContent":["<script>\r\nexport default {\r\n  name: \"messageComponent\",\r\n  computed: {\r\n    current_session(){\r\n      return this.$store.state.current_session\r\n    },\r\n    user(){\r\n      return this.$store.state.user\r\n    }\r\n  },\r\n  mounted(){\r\n    this.$socket.onReceiveMessage((result) => {\r\n      const sid = result['from']\r\n      const message = result['message']\r\n      this.$store.commit(\"RECEIVE_MESSAGE\", {\"sid\": sid, \"content\": message})\r\n    });\r\n  },\r\n  methods: {\r\n    timeFormat(date) {\r\n\t\t\tif (typeof date === \"string\") {\r\n\t\t\t\tdate = new Date(date);\r\n\t\t\t}\r\n\t\t\treturn date.getHours() + \":\" + date.getMinutes();\r\n\t\t},\r\n    avatarFormat(avatar_path){\r\n      return this.$socket.server_host + avatar_path;\r\n    }\r\n  },\r\n\tupdated(){\r\n    this.$nextTick(() => {\r\n      var container = this.$refs.el;\r\n      container.scrollTop = container.scrollHeight;\r\n    });\r\n\t}\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"message\" ref=\"el\">\r\n    <ul v-if=\"current_session\">\r\n      <li v-for=\"(message, index) in current_session.messages\" :key=\"index\">\r\n        <p class=\"time\">\r\n          <span>{{timeFormat(message.date)}}</span>\r\n        </p>\r\n        <div :class=\"{'main': true, 'self': message.self}\">\r\n          <img\r\n            class=\"avatar\"\r\n            width=\"30\"\r\n            height=\"30\"\r\n            :src=\"message.self?avatarFormat(user.avatar):avatarFormat(current_session.user.avatar)\"          />\r\n          <div class=\"text\">{{message.content}}</div>\r\n        </div>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<style lang=\"less\" scoped>\r\n.message {\r\n  padding: 10px 15px;\r\n  overflow-y: scroll;\r\n\r\n  li {\r\n    margin-bottom: 15px;\r\n  }\r\n  .time {\r\n    margin: 7px 0;\r\n    text-align: center;\r\n\r\n    > span {\r\n      display: inline-block;\r\n      padding: 0 18px;\r\n      font-size: 12px;\r\n      color: #fff;\r\n      border-radius: 2px;\r\n      background-color: #dcdcdc;\r\n    }\r\n  }\r\n  .avatar {\r\n    float: left;\r\n    margin: 0 10px 0 0;\r\n    border-radius: 3px;\r\n  }\r\n  .text {\r\n    display: inline-block;\r\n    position: relative;\r\n    padding: 0 10px;\r\n    max-width: ~\"calc(100% - 40px)\";\r\n    min-height: 30px;\r\n    line-height: 2.5;\r\n    font-size: 12px;\r\n    text-align: left;\r\n    word-break: break-all;\r\n    background-color: #fafafa;\r\n    border-radius: 4px;\r\n\r\n    &:before {\r\n      content: \" \";\r\n      position: absolute;\r\n      top: 9px;\r\n      right: 100%;\r\n      border: 6px solid transparent;\r\n      border-right-color: #fafafa;\r\n    }\r\n  }\r\n\r\n  .self {\r\n    text-align: right;\r\n\r\n    .avatar {\r\n      float: right;\r\n      margin: 0 0 0 10px;\r\n    }\r\n    .text {\r\n      background-color: #b2e281;\r\n\r\n      &:before {\r\n        right: inherit;\r\n        left: 100%;\r\n        border-right-color: transparent;\r\n        border-left-color: #b2e281;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>\r\n"],"mappings":"AACA,eAAe;EACbA,IAAI,EAAE,kBAAkB;EACxBC,QAAQ,EAAE;IACRC,eAAeA,CAAA,EAAE;MACf,OAAO,IAAI,CAACC,MAAM,CAACC,KAAK,CAACF,eAAc;IACzC,CAAC;IACDG,IAAIA,CAAA,EAAE;MACJ,OAAO,IAAI,CAACF,MAAM,CAACC,KAAK,CAACC,IAAG;IAC9B;EACF,CAAC;EACDC,OAAOA,CAAA,EAAE;IACP,IAAI,CAACC,OAAO,CAACC,gBAAgB,CAAEC,MAAM,IAAK;MACxC,MAAMC,GAAE,GAAID,MAAM,CAAC,MAAM;MACzB,MAAME,OAAM,GAAIF,MAAM,CAAC,SAAS;MAChC,IAAI,CAACN,MAAM,CAACS,MAAM,CAAC,iBAAiB,EAAE;QAAC,KAAK,EAAEF,GAAG;QAAE,SAAS,EAAEC;MAAO,CAAC;IACxE,CAAC,CAAC;EACJ,CAAC;EACDE,OAAO,EAAE;IACPC,UAAUA,CAACC,IAAI,EAAE;MAClB,IAAI,OAAOA,IAAG,KAAM,QAAQ,EAAE;QAC7BA,IAAG,GAAI,IAAIC,IAAI,CAACD,IAAI,CAAC;MACtB;MACA,OAAOA,IAAI,CAACE,QAAQ,CAAC,IAAI,GAAE,GAAIF,IAAI,CAACG,UAAU,CAAC,CAAC;IACjD,CAAC;IACCC,YAAYA,CAACC,WAAW,EAAC;MACvB,OAAO,IAAI,CAACb,OAAO,CAACc,WAAU,GAAID,WAAW;IAC/C;EACF,CAAC;EACFE,OAAOA,CAAA,EAAE;IACN,IAAI,CAACC,SAAS,CAAC,MAAM;MACnB,IAAIC,SAAQ,GAAI,IAAI,CAACC,KAAK,CAACC,EAAE;MAC7BF,SAAS,CAACG,SAAQ,GAAIH,SAAS,CAACI,YAAY;IAC9C,CAAC,CAAC;EACL;AACD,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}